%h1.page_title Tema på Smidig 2012

På årets smidigkonferanse har vi valgt å spesielt fokusere på følgende temaer:
%br
%ul.bullets
	%li
		%a(href="#forretningsdrevet") Forretningsdrevet utvikling
	%li
		%a(href="#testing") Smidig testing
	%li
		%a(href="#forvaltning") Smidig forvaltning
	%li
		%a(href="#produktdesign") Smidig produktdesign
	%li
		%a(href="#programmering") Smidig programmering


.contentblock{:id => "forretningsdrevet"}
	%h2 Forretningsdrevet utvikling
	%p 
		De ti siste årene har Smidig-bevegelsen hjulpet oss å få bedre kontroll på våre IT-prosjekter, gjennom økt fokus på mennesker, kommunikasjon og samhandling i utviklingsprosessen. Selvom vi i Smidige prosjekter har fokus på prioritering av oppgaver, måler vi først og fremst antall funksjoner som indikasjon på fremdrift. Søken etter "forretningsverdi" er ofte en teoretisk øvelse før produksjonssetting, uten verifisering i etterkant.
		%br
		%br
		Lean Startup er et eksempel på en ny bevegelse, hvis bekreftet læring og måling av forretningsverdi er selve drivkraften." Mer om dette: 
		%a(href="http://theleanstartup.com" target="_blank") http://theleanstartup.com/.
		%br
		%br
		Med mål om å øke fokus på forretningsmessig verdi innen IT-utvikling, søker Smidig 2012 å utfordre etablerte sannheter knyttet til bl.a. kontrakter, kravspesifisering og forretningsdrevet innovasjon.

.contentblock{:id => "testing"}
	%h2 Smidig testing
	%p
		For mange som stifter bekjentskap med smidig testing, handler det i første omgang å endre måten man tenker på. Istedenfor "når" og "hvordan", skal man ha mer fokus på "hvorfor". Smidig testing handler om god kommunikasjon og tett samarbeid mellom testere og utviklere ,og testere er en viktig del av teamet.
		%br
		%br
		Hva er smidig testing? Har testerne kommet like langt som utviklere? Gir smidig testing kun gevinster? Medfører smidig testing noen ulemper? Smidig 2012 søker gode svar på disse spørsmålene. 


.contentblock{:id => "forvaltning"}
	%h2 Smidig forvaltning
	%p
		Smidig forvaltning vekker stadig interesse hos store og små forvaltningsorganer. På lik linje med smidig utvikling, forutsetter smidig forvaltning god kommunikasjon og tett samarbeid mellom forvaltning- og utviklingsorgan. Et viktig moment i smidig forvaltning er at forvaltningsorgan skal rette fokus på prioritering av både endringer og feilrettelser.
		%br
		%br
		Nysgjerrig på om smidig finner sin plass i en forvaltningsorganisasjon? Kan smidig tankegang integreres med veletablerte forvaltningsrammeverk? Er det enkelt og billig å introdusere smidige metoder i en forvaltningsorganisasjon? Vil en forvaltningsorganisasjon alltid bli mer effektivt i sitt arbeid ved å introdusere smidige metoder?
		%br
		%br
		Hvilke erfaringer med smidig forvaltning kan du dele på Smidig 2012? 

.contentblock{:id => "produktdesign"}
	%h2 Smidig produktdesign
	%p
		Det er mange spørsmål som skal besvares for å forstå hvilke egenskaper et produkt bør ha. Hva ønsker vi å oppnå med det? Hvem skal bruke det? Hvilke arbeidsoppgaver skal det støtte? Hvilke funksjoner må det ha? Kan ny teknologi gjøre det mulig å forbedre dagens rutiner? 
		%br
		%br
		Hvordan skal produktet bli enkelt å lære og samtidig effektivt å bruke? Hvordan blir brukerne glad i produktet? Hvordan skal det tåle rushtidstrafikk? Hvordan skal det kunne tilpasses morgendagens behov? 
		%br
		%br
		Smidige metoder er på god vei til å bli defacto standard for hvordan vi utvikler software. Men hvordan hjelper smidige verdier oss å skape riktig produkt? Hvilke teknikker finnes? Hva gjorde du de gangene du lykkes? Eller mislykkes? Hva gjorde du ikke? På Smidigkonferansen har du muligheten til å dele dine erfaringer og lære av andres. Hjelp oss å drive fagfeltet fremover og bidra til enda bedre produkter og færre dyrkjøpte erfaringer. 

.contentblock{:id => "programmering"}
	%h2 Smidig programmering
	%p
		Smidig programmering
		Det har nesten blitt regelen at utviklerene foretrekker å benytte smidige metoder. Hvilke utviklingsteknikker mener du at en smidig utvikler bør kjenne til? 
		%br
		%br
		Mange ser nytten av teknikker som TDD, parprogrammering, stand-up og korte sprinter. Men er det slik at smidige metoder alltid gir oss den beste løsningen? Hvor hører for eksempel eksperten til i et kryssfunksjonelt team? Finnes det smidige arkitekter? 
		%br
		%br
		Mange starter arbeidsdagen med standup. Hvordan sikrer man en nyttig og effektiv standup? Er det fortsatt behov for standup? 
		%br
		%br
		Er det noen programmeringsspråk som egner seg bedre til smidig utvikling? 
		%br
		%br
		Hvordan inkluderes drifterene i teamet ditt? Har vi fortsatt behov for driftere i et smidig kryssfunksjonelt team? Kan man deploye løsningen flere ganger daglig? Gir dette noen økt forretningsverdi? Og hvordan sikrer man effektiv drift av en løsning i kontinuerlig endring?
		%br
		%br

.contentblock
	%em Dette og mye mer søker vi gode svar på under smidig 2012.
	%br
	%br
	%a.button(href="http://participate.smidig2012.no/talks/new") Foreslå din lyntale nå!
	%br
	%br